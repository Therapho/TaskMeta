@page "/transactions"
@using Microsoft.AspNetCore.Authorization
@using TaskMeta.Components.Widgets
@using TaskMeta.Shared.Models
@namespace TaskMeta.Components.Transactions

@rendermode InteractiveServer
@attribute [Authorize]

<h3>Transactions</h3>
<PageTitle>TaskMeta - Transactions</PageTitle>
<FluentStack Orientation="Orientation.Vertical">

    <FluentCard>
        <UserSelector Users="@contributorList" OnSelect="HandleUserSelected" SelectedUser="State?.SelectedUser" />
        <hr />
        @if (isAdmin && State!.SelectedUser != null)
        {
            <FluentStack Orientation="Orientation.Horizontal">
                <FluentButton OnClick="HandleDeposit" Appearance="@(editMode == EditMode.Deposit?Appearance.Accent:Appearance.Neutral)">Deposit</FluentButton>
                <FluentButton OnClick="HandleWithdraw" Appearance="@(editMode == EditMode.Withdraw?Appearance.Accent:Appearance.Neutral)">Withdraw</FluentButton>
                <FluentButton OnClick="HandleTransfer" Appearance="@(editMode == EditMode.Transfer?Appearance.Accent:Appearance.Neutral)">Transfer</FluentButton>
            </FluentStack>
            @if (editMode != EditMode.None)
            {
                <TransactionForm User="@State!.SelectedUser" CallingUser="@loggedInUser" FundList="@_fundList"
                                 OnClose="HandleFormClose" EditMode="@editMode" OnSave="HandleTransactionSaved" />
            }
            <hr />
        }        

        @if (transactionQuery != null)
        {
            <TransactionList Source="@transactionQuery" />
        }
    </FluentCard>

</FluentStack>
@code {

}
