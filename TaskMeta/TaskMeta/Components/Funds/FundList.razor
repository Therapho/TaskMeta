@page "/funds"
@using Microsoft.AspNetCore.Authorization
@using TaskMeta.Components.Widgets
@rendermode InteractiveServer
@attribute [Authorize]

<PageTitle>Task Meta - Fund List</PageTitle>
<h3>Fund List</h3>

<FluentStack Orientation="Orientation.Vertical">
    <FluentCard>
        <UserSelector Users="@contributors" OnSelect="HandleUserSelected" />
        <hr />

        @if (fundList != null)
        {
            <EditForm OnValidSubmit="@HandleSaveFund" FormName="fundEntry" EditContext="editContext">

                <FluentValidationSummary />

                <table>
                    <tr>
                        <th>Name</th>
                        <th>Description</th>
                        <th>Target Date</th>
                        <th>Balance</th>
                        <th>Target Balance</th>
                        <th>Allocation</th>
                        <th></th>
                    </tr>
                    @foreach (var fund in fundList)
                    {

                        @if (editMode && EditFund != null && fund.Id == EditFund.Id)
                        {

                            <tr>
                                <td><FluentTextField @bind-Value="fund.Name" /></td>
                                <td><FluentTextField @bind-Value="fund.Description" /></td>
                                <td><FluentDatePicker @bind-Value="fund.TargetDateTime" /></td>
                                <td><FluentNumberField @bind-Value="fund.Balance" /></td>
                                <td><FluentNumberField @bind-Value="fund.TargetBalance" /></td>
                                <td><FluentNumberField @bind-Value="fund.Allocation" /></td>
                                <td>
                                    <FluentButton Type="ButtonType.Submit" IconStart="@(new Icons.Regular.Size24.Checkmark())" />
                                    <FluentButton OnClick="HandleCancelEdit">X</FluentButton>
                                </td>
                            </tr>
                        }
                        else
                        {
                            <tr>
                                <td>@fund!.Name</td>
                                <td>@fund!.Description</td>
                                <td>@fund!.TargetDate</td>
                                <td>@fund!.Balance</td>
                                <td>@fund!.TargetBalance</td>
                                <td>@fund!.Allocation</td>
                                <td>
                                    <FluentButton IconStart="@(new Icons.Regular.Size24.Edit())"
                                                  OnClick="@(()=>HandleEditFund(fund))" />
                                    <FluentButton IconStart="@(new Icons.Regular.Size24.Delete())"
                                                  OnClick="@(()=>HandleDeleteFund(fund))" />
                                </td>
                            </tr>
                        }
                    }

                    @if (editMode && EditFund != null && EditFund.Id == 0)
                    {

                        <tr>
                            <td><FluentTextField @bind-Value="EditFund.Name" /></td>
                            <td><FluentTextField @bind-Value="EditFund.Description" /></td>
                            <td><FluentDatePicker @bind-Value="EditFund.TargetDateTime" /></td>
                            <td><FluentNumberField @bind-Value="EditFund.Balance" /></td>
                            <td><FluentNumberField @bind-Value="EditFund.TargetBalance" /></td>
                            <td><FluentNumberField @bind-Value="EditFund.Allocation" /></td>
                            <td>
                                <FluentButton Type="ButtonType.Submit" IconStart="@(new Icons.Regular.Size24.Checkmark())" />
                                <FluentButton OnClick="HandleCancelEdit">X</FluentButton>
                            </td>
                        </tr>

                    }
                </table>
            </EditForm>
            <FluentLabel>Allocation total: @fundAllocationTotal</FluentLabel>
            @if (!String.IsNullOrEmpty(warningMessage))
            {
                <div class="warning">@warningMessage</div>
            }
            <hr />
            <FluentButton  @onclick="HandleAddFund" Disabled="@editMode">Add Fund</FluentButton>
        }


    </FluentCard>
</FluentStack>
