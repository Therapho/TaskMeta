@implements IDisposable

@inject NavigationManager NavigationManager

<div class="navmenu">
    <input type="checkbox" title="Menu expand/collapse toggle" id="navmenu-toggle" class="navmenu-icon" />
    <label for="navmenu-toggle" class="navmenu-icon"><FluentIcon Value="@(new Icons.Regular.Size20.Navigation())" Color="Color.Fill" /></label>
    <nav class="sitenav" aria-labelledby="main-menu" onclick="document.getElementById('navmenu-toggle').click();">
        <FluentNavMenu Id="main-menu" Width="250" Collapsible="true" Title="Navigation menu" @bind-Expanded="expanded">
            <AuthorizeView Roles="Contributor">
                <Authorized>
                    <FluentNavLink Href="/checklist" Match="NavLinkMatch.All" Icon="@(new Icons.Regular.Size20.TaskListLtr())" IconColor="Color.Accent">Checklist</FluentNavLink>
                </Authorized>
            </AuthorizeView>

            <AuthorizeView>
                <Authorized>
                    <FluentNavLink Href="summary" Match="NavLinkMatch.All" Icon="@(new Icons.Regular.Size20.GridDots())" IconColor="Color.Accent">Summary</FluentNavLink>

                    <FluentNavLink Href="transactions" Match="NavLinkMatch.All" Icon="@(new Icons.Regular.Size20.List())" IconColor="Color.Accent">Transactions</FluentNavLink>


                </Authorized>

            </AuthorizeView>
            <AuthorizeView Roles="Admin">

                <Authorized>
                    <hr />
                    <FluentNavLink Href="funds" Match="NavLinkMatch.All" Icon="@(new Icons.Regular.Size20.Money())" IconColor="Color.Accent">Funds</FluentNavLink>
                    <FluentNavLink Href="tasks/admin" Match="NavLinkMatch.All" Icon="@(new Icons.Regular.Size20.TaskListAdd())" IconColor="Color.Accent">Task Admin</FluentNavLink>
                    <FluentNavLink Href="jobs/admin" Match="NavLinkMatch.All" Icon="@(new Icons.Regular.Size20.TaskListSquarePerson ())" IconColor="Color.Accent">Jobs</FluentNavLink>
                </Authorized>
            </AuthorizeView>
            <AuthorizeView>
                <Authorized>
                    <form action="Account/Logout" method="post">
                        <AntiforgeryToken />
                        <input type="hidden" name="ReturnUrl" value="@currentUrl" />
                        <FluentButton Type="ButtonType.Submit" Style="width: 100%;">Logout</FluentButton>
                    </form>
                </Authorized>
                <NotAuthorized>
                    <FluentNavLink Href="Account/Login">Login</FluentNavLink>
                </NotAuthorized>
            </AuthorizeView>
        </FluentNavMenu>
    </nav>
</div>

@code {
    private bool expanded = true;

    private string? currentUrl;

    protected override void OnInitialized()
    {
        currentUrl = NavigationManager.ToBaseRelativePath(NavigationManager.Uri);
        NavigationManager.LocationChanged += OnLocationChanged;
    }

    private void OnLocationChanged(object? sender, LocationChangedEventArgs e)
    {
        currentUrl = NavigationManager.ToBaseRelativePath(e.Location);
        StateHasChanged();
    }

    public void Dispose()
    {
        NavigationManager.LocationChanged -= OnLocationChanged;
    }
}