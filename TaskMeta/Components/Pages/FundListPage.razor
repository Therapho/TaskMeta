@page "/funds"
@using Microsoft.AspNetCore.Authorization
@using TaskMeta.Components.Controllers
@using TaskMeta.Components.Views
@using TaskMeta.MVVM

@rendermode InteractiveServer
@attribute [Authorize]
@inherits PageBase<FundListController>
<PageTitle>Task Meta - Fund List</PageTitle>
<h3>Fund List</h3>

<FluentStack Orientation="Orientation.Vertical">
    <FluentCard>
        <UserSelector ViewModel="Controller!.UserSelectorViewModel"/>
        <hr />
        @if (Controller!.FundList != null)
        {
            <EditForm OnValidSubmit="Controller!.HandleSaveFund" FormName="fundEntry" EditContext="Controller!.EditContext">
                <FluentValidationSummary />
                <table>
                    <tr>
                        <th>Name</th> <th>Description</th> <th>Target Date</th> <th>Balance</th> <th>Target Balance</th> <th>Allocation</th> <th>&nbsp;</th>
                    </tr>
                    @foreach (var fund in Controller!.FundList)
                    {
                        @if (Controller!.EditMode && Controller!.EditFund != null && fund.Id == Controller!.EditFund.Id)
                        {

                            <tr>
                                <td><FluentTextField @bind-Value="fund.Name" /></td>
                                <td><FluentTextField @bind-Value="fund.Description" /></td>
                                <td><FluentDatePicker @bind-Value="fund.TargetDateTime" /></td>
                                <td><FluentNumberField @bind-Value="fund.Balance" /></td>
                                <td><FluentNumberField @bind-Value="fund.TargetBalance" /></td>
                                <td><FluentNumberField @bind-Value="fund.Allocation" /></td>
                                <td>
                                    <FluentButton Type="ButtonType.Submit" IconStart="@(new Icons.Regular.Size24.Checkmark())" />
                                    <FluentButton OnClick="Controller!.HandleCancelEdit">X</FluentButton>
                                </td>
                            </tr>
                        }
                        else
                        {
                            <tr>
                                <td>@fund!.Name</td>
                                <td>@fund!.Description</td>
                                <td>@fund!.TargetDate</td>
                                <td>@fund!.Balance.ToString("C")</td>
                                <td>@fund!.TargetBalance</td>
                                <td>@fund!.Allocation</td>
                                <td>
                                    <FluentButton IconStart="@(new Icons.Regular.Size24.Edit())"
                                                  OnClick="@(()=>Controller!.HandleEditFund(fund))" />
                                    <FluentButton IconStart="@(new Icons.Regular.Size24.Delete())"
                                                  OnClick="@(()=>Controller!.HandleDeleteFund(fund))" />
                                </td>
                            </tr>
                        }
                    }

                   
                </table>
            </EditForm>
            <FluentLabel>Allocation total: @Controller!.FundAllocationTotal</FluentLabel>
            @if (!String.IsNullOrEmpty(Controller!.WarningMessage))
            {
                <div class="warning">@Controller!.WarningMessage</div>
            }
            <hr />
            <FluentButton @onclick="Controller!.HandleAddFund" Disabled="@Controller!.EditMode">Add Fund</FluentButton>
        }
    </FluentCard>
</FluentStack>
